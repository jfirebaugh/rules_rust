###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //crate_universe/3rdparty:crates_vendor
###############################################################################

load(
    "@rules_rust//cargo:defs.bzl",
    "cargo_build_script",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# ])

rust_library(
    name = "io_lifetimes",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = select({
        "//conditions:default": {
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD.bazel",
            "BUILD",
            "WORKSPACE.bazel",
            "WORKSPACE",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "close",
        "default",
        "libc",
        "windows-sys",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select({
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "1.0.3",
    deps = [
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:aarch64-linux-android": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__windows-sys-0.42.0//:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:i686-apple-darwin": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:i686-linux-android": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__windows-sys-0.42.0//:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:wasm32-wasi": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__windows-sys-0.42.0//:windows_sys",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",  # common dependency
            "@cui__libc-0.2.137//:libc",  # cfg(not(windows))
        ],
        "//conditions:default": [
            "@cui__io-lifetimes-1.0.3//:build_script_build",
        ],
    }),
)

cargo_build_script(
    # See comment associated with alias. Do not change this name
    name = "io-lifetimes_build_script",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = select({
        "//conditions:default": {
        },
    }),
    build_script_env = {
    },
    compile_data = select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "close",
        "default",
        "libc",
        "windows-sys",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD.bazel",
            "BUILD",
            "WORKSPACE.bazel",
            "WORKSPACE",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select({
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    tools = select_with_or({
        "//conditions:default": [
        ],
    }),
    version = "1.0.3",
    visibility = ["//visibility:private"],
    deps = [
    ] + select({
        "//conditions:default": [
        ],
    }),
)

alias(
    # Because `cargo_build_script` does some invisible target name mutating to
    # determine the package and crate name for a build script, the Bazel
    # target name of any build script cannot be the Cargo canonical name
    # of `cargo_build_script` (rule) without losing out on having certain
    # Cargo environment variables set.
    name = "build_script_build",
    actual = "io-lifetimes_build_script",
    tags = [
        "manual",
    ],
)
